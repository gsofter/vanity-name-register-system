/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VanityRegisterService,
  VanityRegisterServiceInterface,
} from "../VanityRegisterService";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VanityNameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VanityNameRenewed",
    type: "event",
  },
  {
    inputs: [],
    name: "FRONTRUN_TIME",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_MAX_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_MIN_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bytePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNameOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNamePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getPreRegisterHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getRegisterPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "isNameAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockNamePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockedBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "preRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "preRegisters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bytePrice",
        type: "uint256",
      },
    ],
    name: "setBytePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setLockNamePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    name: "setLockTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "vanityNames",
    outputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "withdrawLockedBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc100006001556276a700600255655af3107a400060035560006004553480156200003257600080fd5b5062000053620000476200005960201b60201c565b6200006160201b60201c565b62000125565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61250b80620001356000396000f3fe60806040526004361061019c5760003560e01c8063715018a6116100ec5780639a5ea7551161008a578063bbaefe9f11610064578063bbaefe9f146105ad578063e7b5e76d146105d8578063eaad07be14610615578063f2fde38b146106545761019c565b80639a5ea7551461052e578063ae04d45d14610559578063bb95042f146105825761019c565b806387c38151116100c657806387c381511461047457806387c594d31461049d5780638da5cb5b146104da57806392df86ea146105055761019c565b8063715018a61461041657806382fbdc9c1461042d5780638630bbf3146104495761019c565b806350916973116101595780635d299a85116101335780635d299a85146103695780635dc644f5146103a6578063670a9dd2146103c25780636b086fc4146103eb5761019c565b806350916973146102b2578063546e98c2146102ef5780635be2e90e1461032c5761019c565b80630478d929146101a15780630d668087146101ca578063253f4050146101f55780633d6532a71461022057806344dfdce01461025e578063476343ee1461029b575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c39190611a75565b61067d565b005b3480156101d657600080fd5b506101df610703565b6040516101ec9190612138565b60405180910390f35b34801561020157600080fd5b5061020a610709565b604051610217919061217c565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190611a0b565b61070e565b604051610255929190612153565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190611a34565b610732565b6040516102929190611ede565b60405180910390f35b3480156102a757600080fd5b506102b061077f565b005b3480156102be57600080fd5b506102d960048036038101906102d49190611a0b565b6108a6565b6040516102e69190612138565b60405180910390f35b3480156102fb57600080fd5b5061031660048036038101906103119190611a34565b6108be565b6040516103239190612138565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e9190611a34565b610968565b6040516103609190611f14565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b9190611a34565b610998565b60405161039d9190612138565b60405180910390f35b6103c060048036038101906103bb9190611a34565b610a4f565b005b3480156103ce57600080fd5b506103e960048036038101906103e49190611a34565b610c64565b005b3480156103f757600080fd5b50610400610e9a565b60405161040d9190612138565b60405180910390f35b34801561042257600080fd5b5061042b610ea0565b005b61044760048036038101906104429190611a34565b610f28565b005b34801561045557600080fd5b5061045e611344565b60405161046b919061217c565b60405180910390f35b34801561048057600080fd5b5061049b60048036038101906104969190611a75565b611349565b005b3480156104a957600080fd5b506104c460048036038101906104bf9190611a34565b6113cf565b6040516104d19190611ef9565b60405180910390f35b3480156104e657600080fd5b506104ef6114f5565b6040516104fc9190611ede565b60405180910390f35b34801561051157600080fd5b5061052c60048036038101906105279190611a0b565b61151e565b005b34801561053a57600080fd5b50610543611539565b604051610550919061211d565b60405180910390f35b34801561056557600080fd5b50610580600480360381019061057b9190611a75565b61153e565b005b34801561058e57600080fd5b506105976115c4565b6040516105a49190612138565b60405180910390f35b3480156105b957600080fd5b506105c26115ca565b6040516105cf9190612138565b60405180910390f35b3480156105e457600080fd5b506105ff60048036038101906105fa9190611a34565b6115d0565b60405161060c9190611f14565b60405180910390f35b34801561062157600080fd5b5061063c60048036038101906106379190611a0b565b611602565b60405161064b93929190611f5f565b60405180910390f35b34801561066057600080fd5b5061067b600480360381019061067691906119e2565b6116d4565b005b6106856117cc565b73ffffffffffffffffffffffffffffffffffffffff166106a36114f5565b73ffffffffffffffffffffffffffffffffffffffff16146106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f0906120bd565b60405180910390fd5b8060038190555050565b60025481565b603281565b60076020528060005260406000206000915090508060000154908060010154905082565b60008061073e83610968565b90506005600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6107876117cc565b73ffffffffffffffffffffffffffffffffffffffff166107a56114f5565b73ffffffffffffffffffffffffffffffffffffffff16146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906120bd565b60405180910390fd5b600060045411610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790611ffd565b60405180910390fd5b60006004549050600060048190555060006108596114f5565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156108a1573d6000803e3d6000fd5b505050565b60066020528060005260406000206000915090505481565b600081600360ff1681511015610909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109009061207d565b60405180910390fd5b603260ff1681511115610951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109489061205d565b60405180910390fd5b82516003546109609190612286565b915050919050565b60008160405160200161097b9190611ec7565b604051602081830303815290604052805190602001209050919050565b600081600360ff16815110156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da9061207d565b60405180910390fd5b603260ff1681511115610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a229061205d565b60405180910390fd5b6000610a36846108be565b905060015481610a469190612230565b92505050919050565b806000610a5b82610968565b90503373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610ae35750426005600083815260200190815260200160002060010154115b610b22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b199061209d565b60405180910390fd5b6000610b2d84610968565b90506000610b3a856108be565b9050803414610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7590611f9d565b60405180910390fd5b8060046000828254610b909190612230565b92505081905550600254600560008481526020019081526020016000206001016000828254610bbf9190612230565b9250508190555060003386604051602001610bdb929190611e9f565b604051602081830303815290604052805190602001209050600254600760008381526020019081526020016000206000016000828254610c1b9190612230565b92505081905550427fad3d7b491c54bb6df55d56eb40baabe5bc9ce92fc8693aa544359b4e8ea20e698733604051610c54929190611f2f565b60405180910390a2505050505050565b806000610c7082610968565b90503373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610cf85750426005600083815260200190815260200160002060010154115b610d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2e9061209d565b60405180910390fd5b60003384604051602001610d4c929190611e9f565b6040516020818303038152906040528051906020012090506000600760008381526020019081526020016000206001015411610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db490611fdd565b60405180910390fd5b42600760008381526020019081526020016000206000015410610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c906120dd565b60405180910390fd5b600060076000838152602001908152602001600020600101549050600060076000848152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e92573d6000803e3d6000fd5b505050505050565b60045481565b610ea86117cc565b73ffffffffffffffffffffffffffffffffffffffff16610ec66114f5565b73ffffffffffffffffffffffffffffffffffffffff1614610f1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f13906120bd565b60405180910390fd5b610f2660006117d4565b565b80600360ff1681511015610f71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f689061207d565b60405180910390fd5b603260ff1681511115610fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb09061205d565b60405180910390fd5b816000610fc5826108be565b9050600060015482610fd79190612230565b90508034101561101c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611013906120fd565b60405180910390fd5b8460003382604051602001611032929190611e9f565b60405160208183030381529060405280519060200120905060006006600083815260200190815260200160002054116110a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110979061201d565b60405180910390fd5b60b461ffff1660066000838152602001908152602001600020546110c49190612230565b4211611105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fc9061201d565b60405180910390fd5b86600061111182610968565b905060006005600083815260200190815260200160002060010154148061114d5750426005600083815260200190815260200160002060010154105b61118c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111839061203d565b60405180910390fd5b60006111978a610968565b9050600060405180606001604052808c8152602001600254426111ba9190612230565b81526020013373ffffffffffffffffffffffffffffffffffffffff1681525090508060056000848152602001908152602001600020600082015181600001908051906020019061120b929190611898565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506112698b6108be565b6004600082825461127a9190612230565b925050819055506000338c604051602001611296929190611e9f565b6040516020818303038152906040528051906020012090506040518060400160405280600254426112c79190612230565b8152602001600154815250600760008381526020019081526020016000206000820151816000015560208201518160010155905050427f9d36e00d2ab575b1c85f2e595244219fa31159d4b05b36ae33fcbbd7b84f92aa8d3360405161132e929190611f2f565b60405180910390a2505050505050505050505050565b600381565b6113516117cc565b73ffffffffffffffffffffffffffffffffffffffff1661136f6114f5565b73ffffffffffffffffffffffffffffffffffffffff16146113c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bc906120bd565b60405180910390fd5b8060018190555050565b60008160006113dd82610968565b90506000600560008381526020019081526020016000206001015414806114195750426005600083815260200190815260200160002060010154105b611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f9061203d565b60405180910390fd5b83600360ff16815110156114a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114989061207d565b60405180910390fd5b603260ff16815111156114e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e09061205d565b60405180910390fd5b60019350505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b42600660008381526020019081526020016000208190555050565b60b481565b6115466117cc565b73ffffffffffffffffffffffffffffffffffffffff166115646114f5565b73ffffffffffffffffffffffffffffffffffffffff16146115ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b1906120bd565b60405180910390fd5b8060028190555050565b60015481565b60035481565b600033826040516020016115e5929190611e9f565b604051602081830303815290604052805190602001209050919050565b60056020528060005260406000206000915090508060000180546116259061238f565b80601f01602080910402602001604051908101604052809291908181526020018280546116519061238f565b801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6116dc6117cc565b73ffffffffffffffffffffffffffffffffffffffff166116fa6114f5565b73ffffffffffffffffffffffffffffffffffffffff1614611750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611747906120bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b790611fbd565b60405180910390fd5b6117c9816117d4565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546118a49061238f565b90600052602060002090601f0160209004810192826118c6576000855561190d565b82601f106118df57805160ff191683800117855561190d565b8280016001018555821561190d579182015b8281111561190c5782518255916020019190600101906118f1565b5b50905061191a919061191e565b5090565b5b8082111561193757600081600090555060010161191f565b5090565b600061194e611949846121c8565b612197565b90508281526020810184848401111561196657600080fd5b61197184828561234d565b509392505050565b60008135905061198881612490565b92915050565b60008135905061199d816124a7565b92915050565b600082601f8301126119b457600080fd5b81356119c484826020860161193b565b91505092915050565b6000813590506119dc816124be565b92915050565b6000602082840312156119f457600080fd5b6000611a0284828501611979565b91505092915050565b600060208284031215611a1d57600080fd5b6000611a2b8482850161198e565b91505092915050565b600060208284031215611a4657600080fd5b600082013567ffffffffffffffff811115611a6057600080fd5b611a6c848285016119a3565b91505092915050565b600060208284031215611a8757600080fd5b6000611a95848285016119cd565b91505092915050565b611aa7816122e0565b82525050565b611abe611ab9826122e0565b6123c1565b82525050565b611acd816122f2565b82525050565b611adc816122fe565b82525050565b6000611aed826121f8565b611af78185612203565b9350611b0781856020860161235c565b611b1081612472565b840191505092915050565b6000611b26826121f8565b611b308185612214565b9350611b4081856020860161235c565b80840191505092915050565b6000611b59600f8361221f565b91507f496e76616c696420616d6f756e742e00000000000000000000000000000000006000830152602082019050919050565b6000611b9960268361221f565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611bff60118361221f565b91507f4e6f206c6f636b65642062616c616e63650000000000000000000000000000006000830152602082019050919050565b6000611c3f60138361221f565b91507f4e6f206665657320746f207769746864726177000000000000000000000000006000830152602082019050919050565b6000611c7f60198361221f565b91507f4e6f20617661696c61626c652070726552656769737465722e000000000000006000830152602082019050919050565b6000611cbf60188361221f565b91507f4e616d6520616c726561647920726567697374657265642e00000000000000006000830152602082019050919050565b6000611cff60118361221f565b91507f4e616d6520697320746f6f206c6f6e672e0000000000000000000000000000006000830152602082019050919050565b6000611d3f60128361221f565b91507f4e616d6520697320746f6f2073686f72742e00000000000000000000000000006000830152602082019050919050565b6000611d7f60168361221f565b91507f4e6f207065726d697373696f6e20746f206e616d652e000000000000000000006000830152602082019050919050565b6000611dbf60208361221f565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611dff60108361221f565b91507f556e61626c6520746f20756e6c6f636b000000000000000000000000000000006000830152602082019050919050565b6000611e3f60148361221f565b91507f496e73756666696369656e7420616d6f756e74210000000000000000000000006000830152602082019050919050565b611e7b81612308565b82525050565b611e8a81612336565b82525050565b611e9981612340565b82525050565b6000611eab8285611aad565b601482019150611ebb8284611b1b565b91508190509392505050565b6000611ed38284611b1b565b915081905092915050565b6000602082019050611ef36000830184611a9e565b92915050565b6000602082019050611f0e6000830184611ac4565b92915050565b6000602082019050611f296000830184611ad3565b92915050565b60006040820190508181036000830152611f498185611ae2565b9050611f586020830184611a9e565b9392505050565b60006060820190508181036000830152611f798186611ae2565b9050611f886020830185611e81565b611f956040830184611a9e565b949350505050565b60006020820190508181036000830152611fb681611b4c565b9050919050565b60006020820190508181036000830152611fd681611b8c565b9050919050565b60006020820190508181036000830152611ff681611bf2565b9050919050565b6000602082019050818103600083015261201681611c32565b9050919050565b6000602082019050818103600083015261203681611c72565b9050919050565b6000602082019050818103600083015261205681611cb2565b9050919050565b6000602082019050818103600083015261207681611cf2565b9050919050565b6000602082019050818103600083015261209681611d32565b9050919050565b600060208201905081810360008301526120b681611d72565b9050919050565b600060208201905081810360008301526120d681611db2565b9050919050565b600060208201905081810360008301526120f681611df2565b9050919050565b6000602082019050818103600083015261211681611e32565b9050919050565b60006020820190506121326000830184611e72565b92915050565b600060208201905061214d6000830184611e81565b92915050565b60006040820190506121686000830185611e81565b6121756020830184611e81565b9392505050565b60006020820190506121916000830184611e90565b92915050565b6000604051905081810181811067ffffffffffffffff821117156121be576121bd612443565b5b8060405250919050565b600067ffffffffffffffff8211156121e3576121e2612443565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061223b82612336565b915061224683612336565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561227b5761227a6123e5565b5b828201905092915050565b600061229182612336565b915061229c83612336565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122d5576122d46123e5565b5b828202905092915050565b60006122eb82612316565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561237a57808201518184015260208101905061235f565b83811115612389576000848401525b50505050565b600060028204905060018216806123a757607f821691505b602082108114156123bb576123ba612414565b5b50919050565b60006123cc826123d3565b9050919050565b60006123de82612483565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b612499816122e0565b81146124a457600080fd5b50565b6124b0816122fe565b81146124bb57600080fd5b50565b6124c781612336565b81146124d257600080fd5b5056fea26469706673582212201dda092477b51ec4699b4e89c03611cb4c83a71b0d99b800c45c059a8aec209f64736f6c63430008000033";

export class VanityRegisterService__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VanityRegisterService> {
    return super.deploy(overrides || {}) as Promise<VanityRegisterService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VanityRegisterService {
    return super.attach(address) as VanityRegisterService;
  }
  connect(signer: Signer): VanityRegisterService__factory {
    return super.connect(signer) as VanityRegisterService__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VanityRegisterServiceInterface {
    return new utils.Interface(_abi) as VanityRegisterServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanityRegisterService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VanityRegisterService;
  }
}
