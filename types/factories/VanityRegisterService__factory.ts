/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VanityRegisterService,
  VanityRegisterServiceInterface,
} from "../VanityRegisterService";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VanityNameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VanityNameRenewed",
    type: "event",
  },
  {
    inputs: [],
    name: "FRONTRUN_TIME",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_MAX_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME_MIN_LENGTH",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bytePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNameOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getNamePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getPreRegisterHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "getRegisterPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "isNameAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockNamePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockedBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
    ],
    name: "preRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "preRegisters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bytePrice",
        type: "uint256",
      },
    ],
    name: "setBytePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setLockNamePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    name: "setLockTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "vanityNames",
    outputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_name",
        type: "bytes",
      },
    ],
    name: "withdrawLockedBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc100006001556276a700600255655af3107a400060035560006004553480156200003257600080fd5b5062000053620000476200005960201b60201c565b6200006160201b60201c565b62000125565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61278380620001356000396000f3fe60806040526004361061019c5760003560e01c8063715018a6116100ec5780639a5ea7551161008a578063bbaefe9f11610064578063bbaefe9f146105ad578063e7b5e76d146105d8578063eaad07be14610615578063f2fde38b146106545761019c565b80639a5ea7551461052e578063ae04d45d14610559578063bb95042f146105825761019c565b806387c38151116100c657806387c381511461047457806387c594d31461049d5780638da5cb5b146104da57806392df86ea146105055761019c565b8063715018a61461041657806382fbdc9c1461042d5780638630bbf3146104495761019c565b806350916973116101595780635d299a85116101335780635d299a85146103695780635dc644f5146103a6578063670a9dd2146103c25780636b086fc4146103eb5761019c565b806350916973146102b2578063546e98c2146102ef5780635be2e90e1461032c5761019c565b80630478d929146101a15780630d668087146101ca578063253f4050146101f55780633d6532a71461022057806344dfdce01461025e578063476343ee1461029b575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c39190611c49565b61067d565b005b3480156101d657600080fd5b506101df610703565b6040516101ec91906123a5565b60405180910390f35b34801561020157600080fd5b5061020a610709565b60405161021791906123e9565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190611bdf565b61070e565b6040516102559291906123c0565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190611c08565b610732565b60405161029291906120eb565b60405180910390f35b3480156102a757600080fd5b506102b061077f565b005b3480156102be57600080fd5b506102d960048036038101906102d49190611bdf565b6108a6565b6040516102e691906123a5565b60405180910390f35b3480156102fb57600080fd5b5061031660048036038101906103119190611c08565b6108be565b60405161032391906123a5565b60405180910390f35b34801561033857600080fd5b50610353600480360381019061034e9190611c08565b610968565b6040516103609190612121565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b9190611c08565b610998565b60405161039d91906123a5565b60405180910390f35b6103c060048036038101906103bb9190611c08565b610a4f565b005b3480156103ce57600080fd5b506103e960048036038101906103e49190611c08565b610dac565b005b3480156103f757600080fd5b50610400610f0d565b60405161040d91906123a5565b60405180910390f35b34801561042257600080fd5b5061042b610f13565b005b61044760048036038101906104429190611c08565b610f9b565b005b34801561045557600080fd5b5061045e6113b7565b60405161046b91906123e9565b60405180910390f35b34801561048057600080fd5b5061049b60048036038101906104969190611c49565b6113bc565b005b3480156104a957600080fd5b506104c460048036038101906104bf9190611c08565b611442565b6040516104d19190612106565b60405180910390f35b3480156104e657600080fd5b506104ef611568565b6040516104fc91906120eb565b60405180910390f35b34801561051157600080fd5b5061052c60048036038101906105279190611bdf565b611591565b005b34801561053a57600080fd5b506105436115ac565b604051610550919061238a565b60405180910390f35b34801561056557600080fd5b50610580600480360381019061057b9190611c49565b6115b1565b005b34801561058e57600080fd5b50610597611637565b6040516105a491906123a5565b60405180910390f35b3480156105b957600080fd5b506105c261163d565b6040516105cf91906123a5565b60405180910390f35b3480156105e457600080fd5b506105ff60048036038101906105fa9190611c08565b611643565b60405161060c9190612121565b60405180910390f35b34801561062157600080fd5b5061063c60048036038101906106379190611bdf565b611675565b60405161064b9392919061216c565b60405180910390f35b34801561066057600080fd5b5061067b60048036038101906106769190611bb6565b611747565b005b61068561183f565b73ffffffffffffffffffffffffffffffffffffffff166106a3611568565b73ffffffffffffffffffffffffffffffffffffffff16146106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f09061232a565b60405180910390fd5b8060038190555050565b60025481565b603281565b60076020528060005260406000206000915090508060000154908060010154905082565b60008061073e83610968565b90506005600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b61078761183f565b73ffffffffffffffffffffffffffffffffffffffff166107a5611568565b73ffffffffffffffffffffffffffffffffffffffff16146107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f29061232a565b60405180910390fd5b600060045411610840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108379061226a565b60405180910390fd5b6000600454905060006004819055506000610859611568565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156108a1573d6000803e3d6000fd5b505050565b60066020528060005260406000206000915090505481565b600081600360ff1681511015610909576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610900906122ea565b60405180910390fd5b603260ff1681511115610951576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610948906122ca565b60405180910390fd5b825160035461096091906124fe565b915050919050565b60008160405160200161097b91906120d4565b604051602081830303815290604052805190602001209050919050565b600081600360ff16815110156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da906122ea565b60405180910390fd5b603260ff1681511115610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a22906122ca565b60405180910390fd5b6000610a36846108be565b905060015481610a4691906124a8565b92505050919050565b806000610a5b82610968565b9050610ad26040518060400160405280601e81526020017f76616e6974794e616d65735b6e616d65486173685d2e6f776e6572203d3e00008152506005600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611847565b610b116040518060400160405280600d81526020017f6d73672e73656e646572203d3e0000000000000000000000000000000000000081525033611847565b610b666040518060400160405280602081526020017f76616e6974794e616d65735b6e616d65486173685d2e65787069726573203d3e81525060056000848152602001908152602001600020600101546118e3565b610ba56040518060400160405280601281526020017f626c6f636b2e74696d657374616d70203d3e0000000000000000000000000000815250426118e3565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610c2b5750426005600083815260200190815260200160002060010154115b610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c619061230a565b60405180910390fd5b6000610c7584610968565b90506000610c82856108be565b9050803414610cc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbd9061220a565b60405180910390fd5b8060046000828254610cd891906124a8565b92505081905550600254600560008481526020019081526020016000206001016000828254610d0791906124a8565b9250508190555060003386604051602001610d239291906120ac565b604051602081830303815290604052805190602001209050600254600760008381526020019081526020016000206000016000828254610d6391906124a8565b92505081905550427fad3d7b491c54bb6df55d56eb40baabe5bc9ce92fc8693aa544359b4e8ea20e698733604051610d9c92919061213c565b60405180910390a2505050505050565b60003382604051602001610dc19291906120ac565b6040516020818303038152906040528051906020012090506000600760008381526020019081526020016000206001015411610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e299061224a565b60405180910390fd5b42600760008381526020019081526020016000206000015410610e8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e819061234a565b60405180910390fd5b600060076000838152602001908152602001600020600101549050600060076000848152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f07573d6000803e3d6000fd5b50505050565b60045481565b610f1b61183f565b73ffffffffffffffffffffffffffffffffffffffff16610f39611568565b73ffffffffffffffffffffffffffffffffffffffff1614610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f869061232a565b60405180910390fd5b610f99600061197f565b565b80600360ff1681511015610fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdb906122ea565b60405180910390fd5b603260ff168151111561102c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611023906122ca565b60405180910390fd5b816000611038826108be565b905060006001548261104a91906124a8565b90508034101561108f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110869061236a565b60405180910390fd5b84600033826040516020016110a59291906120ac565b6040516020818303038152906040528051906020012090506000600660008381526020019081526020016000205411611113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110a9061228a565b60405180910390fd5b60b461ffff16600660008381526020019081526020016000205461113791906124a8565b4211611178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116f9061228a565b60405180910390fd5b86600061118482610968565b90506000600560008381526020019081526020016000206001015414806111c05750426005600083815260200190815260200160002060010154105b6111ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f6906122aa565b60405180910390fd5b600061120a8a610968565b9050600060405180606001604052808c81526020016002544261122d91906124a8565b81526020013373ffffffffffffffffffffffffffffffffffffffff1681525090508060056000848152602001908152602001600020600082015181600001908051906020019061127e929190611a6c565b506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506112dc8b6108be565b600460008282546112ed91906124a8565b925050819055506000338c6040516020016113099291906120ac565b60405160208183030381529060405280519060200120905060405180604001604052806002544261133a91906124a8565b8152602001600154815250600760008381526020019081526020016000206000820151816000015560208201518160010155905050427f9d36e00d2ab575b1c85f2e595244219fa31159d4b05b36ae33fcbbd7b84f92aa8d336040516113a192919061213c565b60405180910390a2505050505050505050505050565b600381565b6113c461183f565b73ffffffffffffffffffffffffffffffffffffffff166113e2611568565b73ffffffffffffffffffffffffffffffffffffffff1614611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142f9061232a565b60405180910390fd5b8060018190555050565b600081600061145082610968565b905060006005600083815260200190815260200160002060010154148061148c5750426005600083815260200190815260200160002060010154105b6114cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c2906122aa565b60405180910390fd5b83600360ff1681511015611514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150b906122ea565b60405180910390fd5b603260ff168151111561155c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611553906122ca565b60405180910390fd5b60019350505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b42600660008381526020019081526020016000208190555050565b60b481565b6115b961183f565b73ffffffffffffffffffffffffffffffffffffffff166115d7611568565b73ffffffffffffffffffffffffffffffffffffffff161461162d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116249061232a565b60405180910390fd5b8060028190555050565b60015481565b60035481565b600033826040516020016116589291906120ac565b604051602081830303815290604052805190602001209050919050565b600560205280600052604060002060009150905080600001805461169890612607565b80601f01602080910402602001604051908101604052809291908181526020018280546116c490612607565b80156117115780601f106116e657610100808354040283529160200191611711565b820191906000526020600020905b8154815290600101906020018083116116f457829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b61174f61183f565b73ffffffffffffffffffffffffffffffffffffffff1661176d611568565b73ffffffffffffffffffffffffffffffffffffffff16146117c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ba9061232a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182a9061222a565b60405180910390fd5b61183c8161197f565b50565b600033905090565b6118df828260405160240161185d9291906121aa565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a43565b5050565b61197b82826040516024016118f99291906121da565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a43565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054611a7890612607565b90600052602060002090601f016020900481019282611a9a5760008555611ae1565b82601f10611ab357805160ff1916838001178555611ae1565b82800160010185558215611ae1579182015b82811115611ae0578251825591602001919060010190611ac5565b5b509050611aee9190611af2565b5090565b5b80821115611b0b576000816000905550600101611af3565b5090565b6000611b22611b1d84612435565b612404565b905082815260208101848484011115611b3a57600080fd5b611b458482856125c5565b509392505050565b600081359050611b5c81612708565b92915050565b600081359050611b718161271f565b92915050565b600082601f830112611b8857600080fd5b8135611b98848260208601611b0f565b91505092915050565b600081359050611bb081612736565b92915050565b600060208284031215611bc857600080fd5b6000611bd684828501611b4d565b91505092915050565b600060208284031215611bf157600080fd5b6000611bff84828501611b62565b91505092915050565b600060208284031215611c1a57600080fd5b600082013567ffffffffffffffff811115611c3457600080fd5b611c4084828501611b77565b91505092915050565b600060208284031215611c5b57600080fd5b6000611c6984828501611ba1565b91505092915050565b611c7b81612558565b82525050565b611c92611c8d82612558565b612639565b82525050565b611ca18161256a565b82525050565b611cb081612576565b82525050565b6000611cc182612465565b611ccb818561247b565b9350611cdb8185602086016125d4565b611ce4816126ea565b840191505092915050565b6000611cfa82612465565b611d04818561248c565b9350611d148185602086016125d4565b80840191505092915050565b6000611d2b82612470565b611d358185612497565b9350611d458185602086016125d4565b611d4e816126ea565b840191505092915050565b6000611d66600f83612497565b91507f496e76616c696420616d6f756e742e00000000000000000000000000000000006000830152602082019050919050565b6000611da6602683612497565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611e0c601183612497565b91507f4e6f206c6f636b65642062616c616e63650000000000000000000000000000006000830152602082019050919050565b6000611e4c601383612497565b91507f4e6f206665657320746f207769746864726177000000000000000000000000006000830152602082019050919050565b6000611e8c601983612497565b91507f4e6f20617661696c61626c652070726552656769737465722e000000000000006000830152602082019050919050565b6000611ecc601883612497565b91507f4e616d6520616c726561647920726567697374657265642e00000000000000006000830152602082019050919050565b6000611f0c601183612497565b91507f4e616d6520697320746f6f206c6f6e672e0000000000000000000000000000006000830152602082019050919050565b6000611f4c601283612497565b91507f4e616d6520697320746f6f2073686f72742e00000000000000000000000000006000830152602082019050919050565b6000611f8c601683612497565b91507f4e6f207065726d697373696f6e20746f206e616d652e000000000000000000006000830152602082019050919050565b6000611fcc602083612497565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061200c601083612497565b91507f556e61626c6520746f20756e6c6f636b000000000000000000000000000000006000830152602082019050919050565b600061204c601483612497565b91507f496e73756666696369656e7420616d6f756e74210000000000000000000000006000830152602082019050919050565b61208881612580565b82525050565b612097816125ae565b82525050565b6120a6816125b8565b82525050565b60006120b88285611c81565b6014820191506120c88284611cef565b91508190509392505050565b60006120e08284611cef565b915081905092915050565b60006020820190506121006000830184611c72565b92915050565b600060208201905061211b6000830184611c98565b92915050565b60006020820190506121366000830184611ca7565b92915050565b600060408201905081810360008301526121568185611cb6565b90506121656020830184611c72565b9392505050565b600060608201905081810360008301526121868186611cb6565b9050612195602083018561208e565b6121a26040830184611c72565b949350505050565b600060408201905081810360008301526121c48185611d20565b90506121d36020830184611c72565b9392505050565b600060408201905081810360008301526121f48185611d20565b9050612203602083018461208e565b9392505050565b6000602082019050818103600083015261222381611d59565b9050919050565b6000602082019050818103600083015261224381611d99565b9050919050565b6000602082019050818103600083015261226381611dff565b9050919050565b6000602082019050818103600083015261228381611e3f565b9050919050565b600060208201905081810360008301526122a381611e7f565b9050919050565b600060208201905081810360008301526122c381611ebf565b9050919050565b600060208201905081810360008301526122e381611eff565b9050919050565b6000602082019050818103600083015261230381611f3f565b9050919050565b6000602082019050818103600083015261232381611f7f565b9050919050565b6000602082019050818103600083015261234381611fbf565b9050919050565b6000602082019050818103600083015261236381611fff565b9050919050565b600060208201905081810360008301526123838161203f565b9050919050565b600060208201905061239f600083018461207f565b92915050565b60006020820190506123ba600083018461208e565b92915050565b60006040820190506123d5600083018561208e565b6123e2602083018461208e565b9392505050565b60006020820190506123fe600083018461209d565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561242b5761242a6126bb565b5b8060405250919050565b600067ffffffffffffffff8211156124505761244f6126bb565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006124b3826125ae565b91506124be836125ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124f3576124f261265d565b5b828201905092915050565b6000612509826125ae565b9150612514836125ae565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561254d5761254c61265d565b5b828202905092915050565b60006125638261258e565b9050919050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156125f25780820151818401526020810190506125d7565b83811115612601576000848401525b50505050565b6000600282049050600182168061261f57607f821691505b602082108114156126335761263261268c565b5b50919050565b60006126448261264b565b9050919050565b6000612656826126fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b61271181612558565b811461271c57600080fd5b50565b61272881612576565b811461273357600080fd5b50565b61273f816125ae565b811461274a57600080fd5b5056fea2646970667358221220aeedd9da99f1eef19f66e1285fa8798b1f38fc723126c84601523d2864035aee64736f6c63430008000033";

export class VanityRegisterService__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VanityRegisterService> {
    return super.deploy(overrides || {}) as Promise<VanityRegisterService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VanityRegisterService {
    return super.attach(address) as VanityRegisterService;
  }
  connect(signer: Signer): VanityRegisterService__factory {
    return super.connect(signer) as VanityRegisterService__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VanityRegisterServiceInterface {
    return new utils.Interface(_abi) as VanityRegisterServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VanityRegisterService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VanityRegisterService;
  }
}
